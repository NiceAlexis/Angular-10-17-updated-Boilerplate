{"ast":null,"code":"import { TransferModalComponent } from '../employees/transfer-modal.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/employee.service\";\nimport * as i2 from \"../_services/department.service\";\nimport * as i3 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i4 from \"@angular/router\";\nexport let TransferComponent = /*#__PURE__*/(() => {\n  class TransferComponent {\n    constructor(employeeService, departmentService, modalService, route, router) {\n      this.employeeService = employeeService;\n      this.departmentService = departmentService;\n      this.modalService = modalService;\n      this.route = route;\n      this.router = router;\n      this.departments = [];\n    }\n    ngOnInit() {\n      const email = this.route.snapshot.params['email'];\n      this.employeeService.getAll().subscribe(employees => {\n        this.employee = employees.find(emp => {\n          var _a;\n          return ((_a = emp.account) === null || _a === void 0 ? void 0 : _a.email) === email;\n        });\n        if (this.employee) {\n          this.departmentService.getAll().subscribe(departments => {\n            this.departments = departments;\n            this.openModal(); // ✅ open the modal here\n          });\n        }\n      });\n    }\n\n    openModal() {\n      const modalRef = this.modalService.open(TransferModalComponent);\n      modalRef.componentInstance.employee = this.employee;\n      modalRef.componentInstance.departments = this.departments;\n      modalRef.result.then(selectedDepartmentId => {\n        this.transfer(selectedDepartmentId);\n      }).catch(() => {\n        this.router.navigate(['/employees']);\n      });\n    }\n    transfer(departmentId) {\n      var _a;\n      if (departmentId && ((_a = this.employee) === null || _a === void 0 ? void 0 : _a.accountId)) {\n        this.employeeService.transfer(this.employee.accountId, departmentId).subscribe(() => {\n          this.router.navigate(['/employees']);\n        });\n      }\n    }\n  }\n  TransferComponent.ɵfac = function TransferComponent_Factory(t) {\n    return new (t || TransferComponent)(i0.ɵɵdirectiveInject(i1.EmployeeService), i0.ɵɵdirectiveInject(i2.DepartmentService), i0.ɵɵdirectiveInject(i3.NgbModal), i0.ɵɵdirectiveInject(i4.ActivatedRoute), i0.ɵɵdirectiveInject(i4.Router));\n  };\n  TransferComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TransferComponent,\n    selectors: [[\"app-employee-transfer\"]],\n    decls: 0,\n    vars: 0,\n    template: function TransferComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n  return TransferComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}