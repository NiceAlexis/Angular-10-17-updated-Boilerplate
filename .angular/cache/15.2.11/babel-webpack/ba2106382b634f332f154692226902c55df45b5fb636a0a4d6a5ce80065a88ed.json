{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/request.service\";\nimport * as i2 from \"../_services/employee.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction AddEditComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nfunction AddEditComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"div\", 13)(2, \"div\", 14)(3, \"label\", 5);\n    i0.ɵɵtext(4, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"input\", 15);\n    i0.ɵɵlistener(\"ngModelChange\", function AddEditComponent_div_18_Template_input_ngModelChange_5_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const item_r2 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(item_r2.name = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 14)(7, \"label\", 5);\n    i0.ɵɵtext(8, \"Quantity\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"input\", 16);\n    i0.ɵɵlistener(\"ngModelChange\", function AddEditComponent_div_18_Template_input_ngModelChange_9_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const item_r2 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(item_r2.quantity = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"div\", 17)(11, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function AddEditComponent_div_18_Template_button_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const i_r3 = restoredCtx.index;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.removeItem(i_r3));\n    });\n    i0.ɵɵtext(12, \"Remove\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", item_r2.name);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", item_r2.quantity);\n  }\n}\nexport let AddEditComponent = /*#__PURE__*/(() => {\n  class AddEditComponent {\n    constructor(requestService, employeeService, route, router) {\n      this.requestService = requestService;\n      this.employeeService = employeeService;\n      this.route = route;\n      this.router = router;\n      this.id = null;\n      this.request = {\n        type: 'Equipment',\n        employeeId: '',\n        items: [],\n        status: 'Pending'\n      };\n      this.employees = [];\n      this.errorMessage = '';\n    }\n    ngOnInit() {\n      this.id = this.route.snapshot.params['id'] ? +this.route.snapshot.params['id'] : null;\n      this.employeeService.getAll().subscribe(employees => this.employees = employees);\n      if (this.id) {\n        this.requestService.getById(this.id).subscribe({\n          next: data => {\n            this.request = data;\n          },\n          error: err => this.errorMessage = err.message\n        });\n      } else {\n        this.addItem(); // Start with at least one item field\n      }\n    }\n\n    addItem() {\n      this.request.items.push({\n        name: '',\n        quantity: 1\n      });\n    }\n    removeItem(index) {\n      this.request.items.splice(index, 1);\n    }\n    save() {\n      const payload = Object.assign({}, this.request);\n      // Prevent sending employeeId if creating a new request\n      if (!this.id) {\n        delete payload.employeeId;\n      }\n      const request$ = this.id ? this.requestService.update(this.id, payload) : this.requestService.create(payload);\n      request$.subscribe({\n        next: () => this.router.navigate(['/requests']),\n        error: err => this.errorMessage = err.message\n      });\n    }\n    cancel() {\n      this.router.navigate(['/requests']);\n    }\n  }\n  AddEditComponent.ɵfac = function AddEditComponent_Factory(t) {\n    return new (t || AddEditComponent)(i0.ɵɵdirectiveInject(i1.RequestService), i0.ɵɵdirectiveInject(i2.EmployeeService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  AddEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddEditComponent,\n    selectors: [[\"app-request-add-edit\"]],\n    decls: 26,\n    vars: 4,\n    consts: [[1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"mb-3\"], [1, \"form-label\"], [1, \"form-select\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"border p-2 mb-2\", 4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-secondary\", 3, \"click\"], [1, \"text-center\"], [1, \"btn\", \"btn-primary\", \"me-2\", 3, \"click\"], [1, \"alert\", \"alert-danger\"], [1, \"border\", \"p-2\", \"mb-2\"], [1, \"row\"], [1, \"col-md-5\"], [\"type\", \"text\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"col-md-2\", \"d-flex\", \"align-items-end\"], [1, \"btn\", \"btn-danger\", 3, \"click\"]],\n    template: function AddEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵtemplate(4, AddEditComponent_div_4_Template, 2, 1, \"div\", 3);\n        i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\", 5);\n        i0.ɵɵtext(7, \"Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"select\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function AddEditComponent_Template_select_ngModelChange_8_listener($event) {\n          return ctx.request.type = $event;\n        });\n        i0.ɵɵelementStart(9, \"option\");\n        i0.ɵɵtext(10, \"Equipment\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"option\");\n        i0.ɵɵtext(12, \"Leave\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"option\");\n        i0.ɵɵtext(14, \"Resources\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(15, \"div\", 4)(16, \"label\", 5);\n        i0.ɵɵtext(17, \"Items\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(18, AddEditComponent_div_18_Template, 13, 2, \"div\", 7);\n        i0.ɵɵelementStart(19, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function AddEditComponent_Template_button_click_19_listener() {\n          return ctx.addItem();\n        });\n        i0.ɵɵtext(20, \"Add Item\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"div\", 9)(22, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function AddEditComponent_Template_button_click_22_listener() {\n          return ctx.save();\n        });\n        i0.ɵɵtext(23, \"Save\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function AddEditComponent_Template_button_click_24_listener() {\n          return ctx.cancel();\n        });\n        i0.ɵɵtext(25, \"Cancel\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", ctx.id ? \"Edit\" : \"Add\", \" Request\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.request.type);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngForOf\", ctx.request.items);\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.DefaultValueAccessor, i5.NumberValueAccessor, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgModel],\n    encapsulation: 2\n  });\n  return AddEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}